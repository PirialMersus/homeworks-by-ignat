{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h5/Header.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h9/HW9.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h8/HW8.module.css","p2-homeworks/h5/Header.tsx","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","images/error_404.jpeg","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h10/bll/loadingReducer.ts","p2-homeworks/h10/bll/store.ts","images/Blinking squares.gif","p2-homeworks/h10/HW10.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h9/Clock.tsx","p2-homeworks/h9/HW9.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/Junior-plus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","props","useState","isMenuOpen","setIsMenuOpen","finalClassHeader","s","header","active","className","to","activeClassName","onClick","menuButton","Message","messageWrap","message","icon","src","alt","angle","messageContent","namePlusMessage","name","time","messageData","HW1","avatar","SuperButton","red","restProps","finalClassName","default","buttonsCommonClass","Affair","affair","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","commonInputClass","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","container","inputContainer","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","customCheckbox","target","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","spanClass","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","PreJunior","Error404","style","width","image","initState","isLoading","loadingAC","reducers","combineReducers","loading","action","store","createStore","window","HW10","dispatch","useDispatch","useSelector","getState","loader","console","log","setTimeout","SuperSelect","options","onChangeOption","mappedOptions","index","SuperRadio","onChangeCallback","Number","o","i","arr","HW7","homeWorkReducer","payload","sort","b","people","age","initialPeople","HW8","setPeople","finalPeople","p","peopleTable","Clock","timerId","setTimerId","date","setDate","show","setShow","stop","clearInterval","stringTime","toLocaleTimeString","stringDate","toLocaleDateString","onMouseEnter","onMouseLeave","date_visible","date_invisible","id","setInterval","Date","HW9","Junior","JuniorPlus","PATH","Routes","path","exact","render","HW5","App","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8d717bd7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jX68\",\"icon\":\"Message_icon__2DZH0\",\"angle\":\"Message_angle__2uk7x\",\"messageContent\":\"Message_messageContent__2ETAV\",\"namePlusMessage\":\"Message_namePlusMessage__luAti\",\"time\":\"Message_time__1KOLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonInputClass\":\"SuperInputText_commonInputClass__3UUhh\",\"superInput\":\"SuperInputText_superInput__2LhrV\",\"errorInput\":\"SuperInputText_errorInput__3Wp5Z\",\"error\":\"SuperInputText_error__1bT_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__111PL\",\"menuButton\":\"Header_menuButton__Kciae\",\"shake\":\"Header_shake__33TqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsCommonClass\":\"SuperButton_buttonsCommonClass__1mc9e\",\"blink\":\"SuperButton_blink__TVwYQ\",\"red\":\"SuperButton_red__1Q5nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__1jJke\",\"inputContainer\":\"Greeting_inputContainer__tebZo\",\"error\":\"Greeting_error__3-_Zr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1vrh3\",\"column\":\"HW4_column__38v5m\",\"testSpanError\":\"HW4_testSpanError__1mQo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"SuperCheckbox_customCheckbox__3Ds3C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date_invisible\":\"HW9_date_invisible__hb5iQ\",\"date_visible\":\"HW9_date_visible__rUDOe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__7lniK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spanClass\":\"SuperEditableSpan_spanClass__2Rkzs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"peopleTable\":\"HW8_peopleTable__u3xmK\"};","import React, {useState} from 'react'\nimport {NavLink} from \"react-router-dom\";\nimport s from './Header.module.css'\n\n\ntype PropsType = {\n    // className: string\n}\n\nfunction Header(props: PropsType) {\n    const [isMenuOpen, setIsMenuOpen] = useState(false)\n\n    const finalClassHeader = `${s.header} ${isMenuOpen && s.active}`\n\n    const handleMenuClick = () => {\n        setIsMenuOpen(!isMenuOpen)\n    }\n\n    return (\n        <div className={finalClassHeader}>\n            <div>\n                <NavLink to=\"/pre-jun\" activeClassName=\"selected\">\n                    Исходная страничка\n                </NavLink>\n                <NavLink to=\"/junior\" activeClassName=\"selected\">\n                    Джуниор\n                </NavLink>\n                <NavLink to=\"/junior-plus\" activeClassName=\"selected\">\n                    Джун +\n                </NavLink>\n            </div>\n            <div onClick={handleMenuClick} className={s.menuButton}>\n                <span/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.messageWrap}>\n            <div className={s.message}>\n                <div className={s.icon}>\n                    <img\n                        src=\"https://www.theplace.ru/cache/archive/arnold_schwarzenegger/img/3(60)-gthumb-gwdata600-ghdata400-gfitdatamax.jpg\"\n                        alt=\"ava\"/>\n                </div>\n                <div className={s.angle}></div>\n                <div className={s.messageContent}>\n                    <div className={s.namePlusMessage}>\n                        <h3>{props.name}</h3>\n                        <p>{props.message}</p>\n                    </div>\n                    <div className={s.time}><span>{props.time}</span></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className} ${s.buttonsCommonClass}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: string | \"all\") => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = string\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'low') return affairs.filter(el => el.priority === \"low\")\n    else if (filter === 'middle') return affairs.filter(el => el.priority === \"middle\")\n    else if (filter === 'high') return affairs.filter(el => el.priority === \"high\")\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => { // need to fix any\n    return affairs.filter(el => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =\n        `${s.commonInputClass} ${error ? s.errorInput : s.superInput} ${className\n            ? className :\n            s.superInput}` // need to fix with (?:) and s.superInput\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : ''// need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n\n            <div className={s.inputContainer}>\n                <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\n                {error && <p>{error}</p>}\n            </div>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\n\ntype GreetingContainerPropsType = {\n    users: any // need to fix any\n    addUserCallback: (value: string) => void// need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<any>(``) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const name = e.currentTarget.value\n        setError('')\n        setName(name) // need to fix\n    }\n    const addUser = () => {\n        if (!name || name.trim().length === 0 ) {\n            setName('')\n            setError(`User's name cant be empty`)\n            return\n        }\n        alert(`Hello, ${name}!`) // need to fix\n        addUserCallback(name)\n        setName('')\n        setError('')\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = {\n            _id: v1(),\n            name\n        }\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.target.checked)\n    }\n\n    const finalInputClassName = `${className ? className : ''}`\n\n    return (\n        <label className={s.customCheckbox}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.spanClassName}>{children}</span>\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from 'react'\nimport SuperInputText from '../../../h4/common/c1-SuperInputText/SuperInputText'\nimport s from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n}\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false)\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {}\n\n    const onEnterCallback = () => {\n        setEditMode(false)\n        // setEditMode() // выключить editMode при нажатии Enter\n\n        onEnter && onEnter()\n    }\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false)\n\n        // setEditMode() // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e)\n    }\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true)\n\n        // setEditMode() // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e)\n    }\n\n    // const spanClassName = `${'сделать красивый стиль для спана'} ${className}`\n    const spanClassName = `${s.spanClass} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >✎\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    )\n}\n\nexport default SuperEditableSpan\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state)\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    let state = defaultState\n    const stateAsString = localStorage.getItem(key)\n    if (stateAsString !== null) state = JSON.parse(stateAsString) as T\n    return state\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// пример использования:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке 'test'\nsaveState<StateType>('test', {x: 'A', y: 1})\n\n// получем в переменную state объект из ячейки 'test' или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>('test', {x: '', y: 0})\n","import React, {useState} from 'react'\nimport SuperEditableSpan from './common/c4-SuperEditableSpan/SuperEditableSpan'\nimport SuperButton from '../h4/common/c2-SuperButton/SuperButton'\nimport {restoreState, saveState} from './localStorage/localStorage'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>('')\n\n    const save = () => {\n        saveState<string>('editable-span-value', value)\n    }\n    const restore = () => {\n        const value = restoreState(\"editable-span-value\", '')\n        setValue(value)\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 6\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : 'enter text...'}}\n                />\n            </div>\n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW6\n","import React from 'react'\nimport HW1 from '../../h1/HW1'\nimport HW2 from '../../h2/HW2'\nimport HW3 from '../../h3/HW3'\nimport HW4 from '../../h4/HW4'\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            <HW6/>\n\n        </div>\n    )\n}\n\nexport default PreJunior\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","export default __webpack_public_path__ + \"static/media/error_404.cf2cc339.jpeg\";","import React from 'react'\nimport image from '../../../images/error_404.jpeg'\n\nfunction Error404() {\n    return (\n        <div>\n            <div>\n                <img style={{width: \"100%\"}} src={image} alt=\"404 not found\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default Error404\n","const initState = {\n    isLoading: false\n};\ntype LoadingStateType = {\n    isLoading: boolean\n}\ntype LoadingActionType = {\n    type: \"SET_IS_LOADING\"\n    isLoading: boolean\n}\n\nexport const loadingReducer = (state: LoadingStateType = initState, action: LoadingActionType): LoadingStateType => { // fix any\n    switch (action.type) {\n        case \"SET_IS_LOADING\": {\n            return {...state, isLoading: action.isLoading}\n        }\n        default: return state;\n    }\n};\n\nexport const loadingAC = (isLoading: boolean): LoadingActionType => ({type: \"SET_IS_LOADING\", isLoading}); // fix any","import { createStore } from \"redux\";\nimport { combineReducers } from \"redux\";\nimport {loadingReducer} from \"./loadingReducer\";\n\nconst reducers = combineReducers({\n    loading: loadingReducer,\n});\n\nconst store = createStore(reducers);\n\nexport default store\n\nexport type AppStoreType = ReturnType<typeof reducers>\n\n// @ts-ignore\nwindow.store = store; // for dev\n","export default __webpack_public_path__ + \"static/media/Blinking squares.dc065982.gif\";","import React from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport store from \"./bll/store\";\nimport {loadingAC} from \"./bll/loadingReducer\";\nimport loader from '../../images/Blinking squares.gif'\n\nfunction HW10() {\n    const dispatch = useDispatch();\n    const loading = useSelector(state => store.getState().loading.isLoading);\n    // useSelector, useDispatch\n    // const loading = false;\n\n    const setLoading = () => {\n        dispatch(loadingAC(true))\n        // setTimeout\n        console.log(\"loading...\");\n        setTimeout(() => {\n            dispatch(loadingAC(false))\n        }, 2000)\n    };\n\n    return (\n        <div>\n            <hr/>\n           <h3> homeworks 10</h3>\n\n            {/*should work (должно работать)*/}\n            {loading\n                ? (\n                    <div><img src={loader} alt=\"loader\"/></div>\n                ) : (\n                    <div>\n                        <SuperButton onClick={setLoading}>set loading...</SuperButton>\n                    </div>\n                )\n            }\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<Alternative/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW10;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from 'react'\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n    value: string\n\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }) => {\n    const mappedOptions: any[] | undefined = options?.map((el, index) => {\n            if (el) {\n                return (<option key={index} value={el}>{el}</option>)\n            } else {\n                return (<option>Не из чего выбрать</option>)\n            }\n        })\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        // onChange, onChangeOption\n        if (options && onChangeOption) {\n            onChangeOption(e.target.value)\n        }\n    }\n    return (\n        <select onChange={onChangeCallback} {...restProps} value={value}>\n            {mappedOptions}\n        </select>\n    )\n}\n\nexport default SuperSelect\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: string[]\n    onChangeOption?: (option: string) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // onChange, onChangeOption\n        if (options && onChangeOption) {\n            onChangeOption(options[Number(e.target.value)])\n        }\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + '-' + i}>\n            <input name={name}\n                type={'radio'}\n                   checked={value === o}\n                // name, checked, value,\n                value={i}\n                onChange={onChangeCallback}\n            />\n            {o}\n        </label>\n    )) : []\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    )\n}\n\nexport default SuperRadio\n","import React, {useState} from 'react'\nimport SuperSelect from './common/c5-SuperSelect/SuperSelect'\nimport SuperRadio from './common/c6-SuperRadio/SuperRadio'\n\nconst arr = ['x', 'y', 'z']\n\nfunction HW7() {\n    const [value, onChangeOption] = useState(arr[0])\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 7</h3>\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperSelect\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n            <div>\n                <SuperRadio\n                    name={'radio'}\n                    options={arr}\n                    value={value}\n                    onChangeOption={onChangeOption}\n                />\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperSelect/>*/}\n            {/*<AlternativeSuperRadio/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW7\n","import {InitialPeopleType} from \"../HW8\";\n\nexport type ActionType = {\n    type: \"sort\" | \"check\"\n    payload: \"up\" | \"down\" | number\n}\n\nexport const homeWorkReducer = (state: InitialPeopleType, action: ActionType): InitialPeopleType => {\n    switch (action.type) {\n        case \"sort\": {\n            if (action.payload === \"up\") {\n                return [...state.sort((a, b) => a.name > b.name ? 1 : -1)]\n            } else {\n                return [...state.sort((a, b) => a.name < b.name ? 1 : -1)]\n            }\n        }\n        case \"check\": {\n            return [...state.filter(people => people.age > action.payload)]\n        }\n        default:\n            return state\n    }\n};","import React, {useState} from \"react\";\nimport {homeWorkReducer} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from './HW8.module.css'\n\n\nexport type PeopleType = {\n    _id: number\n    name: string\n    age: number\n}\nexport type InitialPeopleType = PeopleType[]\n\n\nconst initialPeople: InitialPeopleType = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            <p className={s.peopleTable}><span>{p.name}</span> <span>{p.age}</span></p>\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: \"sort\", payload: \"down\"}))\n    const check18 = () => setPeople(homeWorkReducer(initialPeople, {type: \"check\", payload: 18}))\n\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 8</h3>\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton><SuperButton onClick={sortDown}>sort\n                down</SuperButton><SuperButton onClick={check18}>check 18</SuperButton></div>\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React, {useState} from \"react\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport s from './HW9.module.css'\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number>(0);\n    const [date, setDate] = useState<Date>();\n    const [show, setShow] = useState<boolean>(false);\n\n    const stop = () => {\n        clearInterval(timerId);\n        // stop\n    }\n    const start = () => {\n        stop();\n        const id: number = window.setInterval(() => {\n            // setDate\n            setDate(new Date())\n        }, 1000);\n        setTimerId(id);\n    }\n\n\n    const onMouseEnter = () => {\n        // show\n        setShow(true)\n    };\n    const onMouseLeave = () => {\n        // close\n        setShow(false)\n    };\n\n    const stringTime = date?.toLocaleTimeString() || <br/>; // fix with date\n    const stringDate = date?.toLocaleDateString() || <br/>\n\n    return (\n        <div>\n            <div\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                {stringTime}\n            </div>\n\n\n                <div className={show ? s.date_visible : s.date_invisible}>\n                    {stringDate}\n                </div>\n\n\n\n            <SuperButton onClick={start}>start</SuperButton>\n            <SuperButton onClick={stop}>stop</SuperButton>\n\n        </div>\n    );\n}\n\nexport default Clock;\n","import React from \"react\";\nimport Clock from \"./Clock\";\n\nfunction HW9() {\n    return (\n        <div>\n            <hr/>\n            <h3>homeworks 9</h3>\n\n            {/*should work (должно работать)*/}\n            <Clock/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeClock/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW9;\n","import React from 'react'\nimport HW10 from '../../h10/HW10'\nimport HW7 from '../../h7/HW7'\nimport HW8 from '../../h8/HW8'\nimport HW9 from '../../h9/HW9'\n\nfunction Junior() {\n    return (\n        <div>\n            <h1>Junior</h1>\n            <HW7/>\n            <HW8/>\n            <HW9/>\n            <HW10/>\n        </div>\n    )\n}\n\nexport default Junior","import React from 'react'\n\nfunction JuniorPlus() {\n    return (\n        <div>\n            Junior plus\n        </div>\n    )\n}\n\nexport default JuniorPlus\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from 'react'\nimport {Redirect, Route, Switch } from 'react-router-dom'\nimport PreJunior from \"./pages/PreJunior\";\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from './pages/Junior-plus';\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-jun',\n    JUNIOR: '/junior',\n    JUNIOR_PLUS: '/junior-plus',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            <Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n            <Route path={PATH.PRE_JUNIOR} exact render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} exact render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} exact render={() => <JuniorPlus/>}/>\n                {/*// add routes*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport {HashRouter} from 'react-router-dom'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            <HashRouter>\n\n                <Header/>\n\n                <Routes/>\n\n            </HashRouter>\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from '../../../p2-homeworks/h5/HW5'\nimport HW6 from '../../../p2-homeworks/h6/HW6'\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <h1>react homeworks:</h1>\n            {/*<HW1/>*/}\n            {/*<HW2/>*/}\n            {/*<HW3/>*/}\n            {/*<HW4/>*/}\n            <HW5/>\n\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\nimport {Provider} from \"react-redux\";\nimport store from \"./p2-homeworks/h10/bll/store\";\n\n// const store: Store<ArticleState, ArticleAction> & {\n//     dispatch: DispatchType\n// } = createStore(reducer, applyMiddleware(thunk))\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}