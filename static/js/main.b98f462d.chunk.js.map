{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","s","messageWrap","message","icon","src","alt","angle","messageContent","namePlusMessage","name","time","messageData","HW1","avatar","SuperButton","red","restProps","finalClassName","default","buttonsCommonClass","Affair","affair","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","priority","HW2","useState","affairs","setAffairs","filter","filteredAffairs","el","filterAffairs","deleteAffair","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","finalSpanClassName","finalInputClassName","commonInputClass","errorInput","superInput","e","currentTarget","value","key","Greeting","setNameCallback","addUser","totalUsers","inputClass","container","inputContainer","GreetingContainer","users","addUserCallback","setName","setError","length","trim","alert","HW3","setUsers","newUser","v1","SuperCheckbox","onChangeChecked","children","checkbox","customCheckbox","target","checked","HW4","text","setText","showAlert","setChecked","column","testSpanError","blue","disabled","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.b98f462d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3jX68\",\"icon\":\"Message_icon__2DZH0\",\"angle\":\"Message_angle__2uk7x\",\"messageContent\":\"Message_messageContent__2ETAV\",\"namePlusMessage\":\"Message_namePlusMessage__luAti\",\"time\":\"Message_time__1KOLj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commonInputClass\":\"SuperInputText_commonInputClass__3UUhh\",\"superInput\":\"SuperInputText_superInput__2LhrV\",\"errorInput\":\"SuperInputText_errorInput__3Wp5Z\",\"error\":\"SuperInputText_error__1bT_o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"SuperButton_button__xREfR\",\"buttonsCommonClass\":\"SuperButton_buttonsCommonClass__1mc9e\",\"blink\":\"SuperButton_blink__TVwYQ\",\"red\":\"SuperButton_red__1Q5nN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Greeting_container__1jJke\",\"inputContainer\":\"Greeting_inputContainer__tebZo\",\"error\":\"Greeting_error__3-_Zr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__1vrh3\",\"column\":\"HW4_column__38v5m\",\"testSpanError\":\"HW4_testSpanError__1mQo1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"SuperCheckbox_customCheckbox__3Ds3C\",\"checkbox\":\"SuperCheckbox_checkbox__1Qz97\",\"spanClassName\":\"SuperCheckbox_spanClassName__1NlVm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__7lniK\"};","import React from 'react'\nimport s from './Message.module.css'\n\ntype MessagePropsType = {\n    avatar: string\n    name: string\n    message: string\n    time: string\n}\n\nfunction Message(props: MessagePropsType) {\n    return (\n        <div className={s.messageWrap}>\n            <div className={s.message}>\n                <div className={s.icon}>\n                    <img\n                        src=\"https://www.theplace.ru/cache/archive/arnold_schwarzenegger/img/3(60)-gthumb-gwdata600-ghdata400-gfitdatamax.jpg\"\n                        alt=\"ava\"/>\n                </div>\n                <div className={s.angle}></div>\n                <div className={s.messageContent}>\n                    <div className={s.namePlusMessage}>\n                        <h3>{props.name}</h3>\n                        <p>{props.message}</p>\n                    </div>\n                    <div className={s.time}><span>{props.time}</span></div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\nconst messageData = {\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n    name: 'Some Name',\n    message: 'some text',\n    time: '22:00',\n}\n\nfunction HW1() {\n    return (\n        <div>\n            <hr/>\n            homeworks 1\n\n            {/*should work (должно работать)*/}\n\n            <Message\n                avatar={messageData.avatar}\n                name={messageData.name}\n                message={messageData.message}\n                time={messageData.time}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeMessage/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW1\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className} ${s.buttonsCommonClass}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React from 'react'\nimport { AffairType } from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairPropsType = {\n    // key не нужно типизировать\n    affair: AffairType // need to fix any\n    deleteAffairCallback: (id: number) => void // need to fix any\n}\n\nfunction Affair(props: AffairPropsType) {\n    const deleteCallback = () => {props.deleteAffairCallback(props.affair._id)}// need to fix\n\n    return (\n        <div>\n            {props.affair.name}\n            <SuperButton onClick={deleteCallback}>X</SuperButton>\n        </div>\n    )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType} from './HW2'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\ntype AffairsPropsType = { // need to fix any\n    data: Array<AffairType>\n    setFilter: (filter: string | \"all\") => void\n    deleteAffairCallback: (id: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n    const mappedAffairs = props.data.map((a: AffairType) => (\n        <Affair // should work\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n            affair={a}\n            deleteAffairCallback={props.deleteAffairCallback}\n        />\n    ))\n\n    const setAll = () => {\n        props.setFilter('all')\n    } // need to fix\n    const setHigh = () => {\n        props.setFilter('high')\n    }\n    const setMiddle = () => {\n        props.setFilter('middle')\n    }\n    const setLow = () => {\n        props.setFilter('low')\n    }\n\n    return (\n        <div>\n\n            {mappedAffairs}\n            <SuperButton onClick={setAll}>All</SuperButton>\n            <SuperButton onClick={setHigh}>High</SuperButton>\n            <SuperButton onClick={setMiddle}>Middle</SuperButton>\n            <SuperButton onClick={setLow}>Low</SuperButton>\n\n        </div>\n    )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = string\nexport type AffairType = {\n    _id: number\n    name: string\n    priority: string\n}\n\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n    {_id: 1, name: 'React', priority: 'high'},\n    {_id: 2, name: 'anime', priority: 'low'},\n    {_id: 3, name: 'games', priority: 'low'},\n    {_id: 4, name: 'work', priority: 'high'},\n    {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n    if (filter === 'low') return affairs.filter(el => el.priority === \"low\")\n    else if (filter === 'middle') return affairs.filter(el => el.priority === \"middle\")\n    else if (filter === 'high') return affairs.filter(el => el.priority === \"high\")\n    else return affairs\n}\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number) => { // need to fix any\n    return affairs.filter(el => el._id !== _id)\n}\n\nfunction HW2() {\n    const [affairs, setAffairs] = useState(defaultAffairs)\n    const [filter, setFilter] = useState<FilterType>('all')\n\n    const filteredAffairs = filterAffairs(affairs, filter)\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n    return (\n        <div>\n            <hr/>\n            homeworks 2\n\n            {/*should work (должно работать)*/}\n            <Affairs\n                data={filteredAffairs}\n                setFilter={setFilter}\n                deleteAffairCallback={deleteAffairCallback}\n            />\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeAffairs/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW2\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName =\n        `${s.commonInputClass} ${error ? s.errorInput : s.superInput} ${className\n        ? className :\n        ''}` // need to fix with (?:) and s.superInput\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent} from 'react'\nimport s from './Greeting.module.css'\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport SuperInputText from \"../h4/common/c1-SuperInputText/SuperInputText\";\n\ntype GreetingPropsType = {\n    name: string // need to fix any\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\n    addUser: () => void // need to fix any\n    error: string // need to fix any\n    totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n    const inputClass = error ? s.error : ''// need to fix with (?:)\n\n    return (\n        <div className={s.container}>\n\n            <div className={s.inputContainer}>\n                <SuperInputText value={name} onChange={setNameCallback} className={inputClass}/>\n                {error && <p>{error}</p>}\n            </div>\n            <SuperButton onClick={addUser}>add</SuperButton>\n            <span>{totalUsers}</span>\n        </div>\n    )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, useState} from 'react'\nimport Greeting from './Greeting'\n\ntype GreetingContainerPropsType = {\n    users: any // need to fix any\n    addUserCallback: (value: string) => void// need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n    const [name, setName] = useState<string>('') // need to fix any\n    const [error, setError] = useState<any>(``) // need to fix any\n\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n        const name = e.currentTarget.value\n        setError('')\n        setName(name) // need to fix\n    }\n    const addUser = () => {\n        if (!name || name.trim().length === 0 ) {\n            setName('')\n            setError(`User's name cant be empty`)\n            return\n        }\n        alert(`Hello, ${name}!`) // need to fix\n        addUserCallback(name)\n        setName('')\n        setError('')\n    }\n\n    const totalUsers = users.length // need to fix\n\n    return (\n        <Greeting\n            name={name}\n            setNameCallback={setNameCallback}\n            addUser={addUser}\n            error={error}\n            totalUsers={totalUsers}\n        />\n    )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport { v1 } from 'uuid'\nimport GreetingContainer from './GreetingContainer'\n\n// types\nexport type UserType = {\n    _id: string // need to fix any\n    name: string // need to fix any\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n    const addUserCallback = (name: string) => { // need to fix any\n        const newUser = {\n            _id: v1(),\n            name\n        }\n        setUsers([newUser, ...users]) // need to fix\n    }\n\n    return (\n        <div>\n            <hr/>\n            homeworks 3\n\n            {/*should work (должно работать)*/}\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeGreeting/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.target.checked)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.customCheckbox}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n    const [text, setText] = useState<string>('')\n    const error = text ? '' : 'error'\n\n    const showAlert = () => {\n        if (error) {\n            alert('введите текст...')\n        } else {\n            alert(text) // если нет ошибки показать текст\n        }\n    }\n\n    const [checked, setChecked] = useState<boolean>(false)\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n    return (\n        <div>\n            <hr/>\n            homeworks 4\n\n            <div className={s.column}>\n                <SuperInputText\n                    value={text}\n                    onChangeText={setText}\n                    onEnter={showAlert}\n                    error={error}\n                    spanClassName={s.testSpanError}\n                />\n\n                <SuperInputText\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\n                />\n\n                {/*----------------------------------------------------*/}\n\n                <SuperButton>\n                    default\n                </SuperButton>\n\n                <SuperButton\n                    red // пропсу с булевым значением не обязательно указывать true\n                    onClick={showAlert}\n                >\n                    delete {/*// название кнопки попадёт в children*/}\n                </SuperButton>\n\n                <SuperButton disabled>\n                    disabled\n                </SuperButton>\n\n                {/*----------------------------------------------------*/}\n\n                <SuperCheckbox\n                    checked={checked}\n                    onChangeChecked={setChecked}\n                >\n                    some text {/*// этот текст попадёт в children*/}\n                </SuperCheckbox>\n\n                {/*// onChange тоже должен работать*/}\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\n            </div>\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperInputText/>*/}\n            {/*<AlternativeSuperButton/>*/}\n            {/*<AlternativeSuperCheckbox/>*/}\n            <hr/>\n        </div>\n    )\n}\n\nexport default HW4\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from '../../../p2-homeworks/h2/HW2'\nimport HW3 from '../../../p2-homeworks/h3/HW3'\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            <div>react homeworks:</div>\n            <HW1/>\n            <HW2/>\n            <HW3/>\n            <HW4/>\n            {/*<HW5/>*/}\n\n        </div>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}